package universe

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetUniverseStargatesStargateIDReader is a Reader for the GetUniverseStargatesStargateID structure.
type GetUniverseStargatesStargateIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUniverseStargatesStargateIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUniverseStargatesStargateIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetUniverseStargatesStargateIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUniverseStargatesStargateIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetUniverseStargatesStargateIDOK creates a GetUniverseStargatesStargateIDOK with default headers values
func NewGetUniverseStargatesStargateIDOK() *GetUniverseStargatesStargateIDOK {
	return &GetUniverseStargatesStargateIDOK{}
}

/*GetUniverseStargatesStargateIDOK handles this case with default header values.

Information about a stargate
*/
type GetUniverseStargatesStargateIDOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload GetUniverseStargatesStargateIDOKBody
}

func (o *GetUniverseStargatesStargateIDOK) Error() string {
	return fmt.Sprintf("[GET /universe/stargates/{stargate_id}/][%d] getUniverseStargatesStargateIdOK  %+v", 200, o.Payload)
}

func (o *GetUniverseStargatesStargateIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStargatesStargateIDNotFound creates a GetUniverseStargatesStargateIDNotFound with default headers values
func NewGetUniverseStargatesStargateIDNotFound() *GetUniverseStargatesStargateIDNotFound {
	return &GetUniverseStargatesStargateIDNotFound{}
}

/*GetUniverseStargatesStargateIDNotFound handles this case with default header values.

Stargate not found
*/
type GetUniverseStargatesStargateIDNotFound struct {
	Payload GetUniverseStargatesStargateIDNotFoundBody
}

func (o *GetUniverseStargatesStargateIDNotFound) Error() string {
	return fmt.Sprintf("[GET /universe/stargates/{stargate_id}/][%d] getUniverseStargatesStargateIdNotFound  %+v", 404, o.Payload)
}

func (o *GetUniverseStargatesStargateIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUniverseStargatesStargateIDInternalServerError creates a GetUniverseStargatesStargateIDInternalServerError with default headers values
func NewGetUniverseStargatesStargateIDInternalServerError() *GetUniverseStargatesStargateIDInternalServerError {
	return &GetUniverseStargatesStargateIDInternalServerError{}
}

/*GetUniverseStargatesStargateIDInternalServerError handles this case with default header values.

Internal server error
*/
type GetUniverseStargatesStargateIDInternalServerError struct {
	Payload GetUniverseStargatesStargateIDInternalServerErrorBody
}

func (o *GetUniverseStargatesStargateIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /universe/stargates/{stargate_id}/][%d] getUniverseStargatesStargateIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUniverseStargatesStargateIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUniverseStargatesStargateIDInternalServerErrorBody get_universe_stargates_stargate_id_internal_server_error
//
// Internal server error
swagger:model GetUniverseStargatesStargateIDInternalServerErrorBody
*/
type GetUniverseStargatesStargateIDInternalServerErrorBody struct {

	// get_universe_stargates_stargate_id_500_internal_server_error
	//
	// Internal server error message
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this get universe stargates stargate ID internal server error body
func (o *GetUniverseStargatesStargateIDInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseStargatesStargateIDInternalServerErrorBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdInternalServerError"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

/*GetUniverseStargatesStargateIDNotFoundBody get_universe_stargates_stargate_id_not_found
//
// Not found
swagger:model GetUniverseStargatesStargateIDNotFoundBody
*/
type GetUniverseStargatesStargateIDNotFoundBody struct {

	// get_universe_stargates_stargate_id_404_not_found
	//
	// Not found message
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this get universe stargates stargate ID not found body
func (o *GetUniverseStargatesStargateIDNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseStargatesStargateIDNotFoundBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdNotFound"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

/*GetUniverseStargatesStargateIDOKBody get_universe_stargates_stargate_id_ok
//
// 200 ok object
swagger:model GetUniverseStargatesStargateIDOKBody
*/
type GetUniverseStargatesStargateIDOKBody struct {

	// destination
	// Required: true
	Destination *GetUniverseStargatesStargateIDOKBodyDestination `json:"destination"`

	// get_universe_stargates_stargate_id_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`

	// position
	// Required: true
	Position *GetUniverseStargatesStargateIDOKBodyPosition `json:"position"`

	// get_universe_stargates_stargate_id_stargate_id
	//
	// stargate_id integer
	// Required: true
	StargateID *int32 `json:"stargate_id"`

	// get_universe_stargates_stargate_id_system_id
	//
	// The solar system this stargate is in
	// Required: true
	SystemID *int32 `json:"system_id"`

	// get_universe_stargates_stargate_id_type_id
	//
	// type_id integer
	// Required: true
	TypeID *int32 `json:"type_id"`
}

// Validate validates this get universe stargates stargate ID o k body
func (o *GetUniverseStargatesStargateIDOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDestination(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePosition(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateStargateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSystemID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateTypeID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseStargatesStargateIDOKBody) validateDestination(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"destination", "body", o.Destination); err != nil {
		return err
	}

	if o.Destination != nil {

		if err := o.Destination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getUniverseStargatesStargateIdOK" + "." + "destination")
			}
			return err
		}
	}

	return nil
}

func (o *GetUniverseStargatesStargateIDOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseStargatesStargateIDOKBody) validatePosition(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"position", "body", o.Position); err != nil {
		return err
	}

	if o.Position != nil {

		if err := o.Position.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getUniverseStargatesStargateIdOK" + "." + "position")
			}
			return err
		}
	}

	return nil
}

func (o *GetUniverseStargatesStargateIDOKBody) validateStargateID(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"stargate_id", "body", o.StargateID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseStargatesStargateIDOKBody) validateSystemID(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"system_id", "body", o.SystemID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseStargatesStargateIDOKBody) validateTypeID(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"type_id", "body", o.TypeID); err != nil {
		return err
	}

	return nil
}

/*GetUniverseStargatesStargateIDOKBodyDestination get_universe_stargates_stargate_id_destination
//
// destination object
swagger:model GetUniverseStargatesStargateIDOKBodyDestination
*/
type GetUniverseStargatesStargateIDOKBodyDestination struct {

	// get_universe_stargates_stargate_id_stargate_id
	//
	// The stargate this stargate connects to
	// Required: true
	StargateID *int32 `json:"stargate_id"`

	// get_universe_stargates_stargate_id_system_id
	//
	// The solar system this stargate connects to
	// Required: true
	SystemID *int32 `json:"system_id"`
}

// Validate validates this get universe stargates stargate ID o k body destination
func (o *GetUniverseStargatesStargateIDOKBodyDestination) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStargateID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSystemID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseStargatesStargateIDOKBodyDestination) validateStargateID(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"destination"+"."+"stargate_id", "body", o.StargateID); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseStargatesStargateIDOKBodyDestination) validateSystemID(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"destination"+"."+"system_id", "body", o.SystemID); err != nil {
		return err
	}

	return nil
}

/*GetUniverseStargatesStargateIDOKBodyPosition get_universe_stargates_stargate_id_position
//
// position object
swagger:model GetUniverseStargatesStargateIDOKBodyPosition
*/
type GetUniverseStargatesStargateIDOKBodyPosition struct {

	// get_universe_stargates_stargate_id_x
	//
	// x number
	// Required: true
	X *float32 `json:"x"`

	// get_universe_stargates_stargate_id_y
	//
	// y number
	// Required: true
	Y *float32 `json:"y"`

	// get_universe_stargates_stargate_id_z
	//
	// z number
	// Required: true
	Z *float32 `json:"z"`
}

// Validate validates this get universe stargates stargate ID o k body position
func (o *GetUniverseStargatesStargateIDOKBodyPosition) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateX(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateY(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateZ(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUniverseStargatesStargateIDOKBodyPosition) validateX(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"position"+"."+"x", "body", o.X); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseStargatesStargateIDOKBodyPosition) validateY(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"position"+"."+"y", "body", o.Y); err != nil {
		return err
	}

	return nil
}

func (o *GetUniverseStargatesStargateIDOKBodyPosition) validateZ(formats strfmt.Registry) error {

	if err := validate.Required("getUniverseStargatesStargateIdOK"+"."+"position"+"."+"z", "body", o.Z); err != nil {
		return err
	}

	return nil
}
