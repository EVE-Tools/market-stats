package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetCharactersCharacterIDMailListsReader is a Reader for the GetCharactersCharacterIDMailLists structure.
type GetCharactersCharacterIDMailListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDMailListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDMailListsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetCharactersCharacterIDMailListsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDMailListsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDMailListsOK creates a GetCharactersCharacterIDMailListsOK with default headers values
func NewGetCharactersCharacterIDMailListsOK() *GetCharactersCharacterIDMailListsOK {
	return &GetCharactersCharacterIDMailListsOK{}
}

/*GetCharactersCharacterIDMailListsOK handles this case with default header values.

Mailing lists
*/
type GetCharactersCharacterIDMailListsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCharactersCharacterIDMailListsOKBodyItems0
}

func (o *GetCharactersCharacterIDMailListsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsForbidden creates a GetCharactersCharacterIDMailListsForbidden with default headers values
func NewGetCharactersCharacterIDMailListsForbidden() *GetCharactersCharacterIDMailListsForbidden {
	return &GetCharactersCharacterIDMailListsForbidden{}
}

/*GetCharactersCharacterIDMailListsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDMailListsForbidden struct {
	Payload GetCharactersCharacterIDMailListsForbiddenBody
}

func (o *GetCharactersCharacterIDMailListsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDMailListsInternalServerError creates a GetCharactersCharacterIDMailListsInternalServerError with default headers values
func NewGetCharactersCharacterIDMailListsInternalServerError() *GetCharactersCharacterIDMailListsInternalServerError {
	return &GetCharactersCharacterIDMailListsInternalServerError{}
}

/*GetCharactersCharacterIDMailListsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDMailListsInternalServerError struct {
	Payload GetCharactersCharacterIDMailListsInternalServerErrorBody
}

func (o *GetCharactersCharacterIDMailListsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/mail/lists/][%d] getCharactersCharacterIdMailListsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDMailListsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDMailListsForbiddenBody get_characters_character_id_mail_lists_forbidden
//
// Forbidden
swagger:model GetCharactersCharacterIDMailListsForbiddenBody
*/
type GetCharactersCharacterIDMailListsForbiddenBody struct {

	// get_characters_character_id_mail_lists_403_forbidden
	//
	// Forbidden message
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this get characters character ID mail lists forbidden body
func (o *GetCharactersCharacterIDMailListsForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailListsForbiddenBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdMailListsForbidden"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDMailListsInternalServerErrorBody get_characters_character_id_mail_lists_internal_server_error
//
// Internal server error
swagger:model GetCharactersCharacterIDMailListsInternalServerErrorBody
*/
type GetCharactersCharacterIDMailListsInternalServerErrorBody struct {

	// get_characters_character_id_mail_lists_500_internal_server_error
	//
	// Internal server error message
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this get characters character ID mail lists internal server error body
func (o *GetCharactersCharacterIDMailListsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailListsInternalServerErrorBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdMailListsInternalServerError"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDMailListsOKBodyItems0 get_characters_character_id_mail_lists_200_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDMailListsOKBodyItems0
*/
type GetCharactersCharacterIDMailListsOKBodyItems0 struct {

	// get_characters_character_id_mail_lists_mailing_list_id
	//
	// Mailing list ID
	// Required: true
	MailingListID *int32 `json:"mailing_list_id"`

	// get_characters_character_id_mail_lists_name
	//
	// name string
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this get characters character ID mail lists o k body items0
func (o *GetCharactersCharacterIDMailListsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMailingListID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDMailListsOKBodyItems0) validateMailingListID(formats strfmt.Registry) error {

	if err := validate.Required("mailing_list_id", "body", o.MailingListID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDMailListsOKBodyItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}
