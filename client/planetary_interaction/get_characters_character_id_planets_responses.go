package planetary_interaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetCharactersCharacterIDPlanetsReader is a Reader for the GetCharactersCharacterIDPlanets structure.
type GetCharactersCharacterIDPlanetsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCharactersCharacterIDPlanetsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCharactersCharacterIDPlanetsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewGetCharactersCharacterIDPlanetsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetCharactersCharacterIDPlanetsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetCharactersCharacterIDPlanetsOK creates a GetCharactersCharacterIDPlanetsOK with default headers values
func NewGetCharactersCharacterIDPlanetsOK() *GetCharactersCharacterIDPlanetsOK {
	return &GetCharactersCharacterIDPlanetsOK{}
}

/*GetCharactersCharacterIDPlanetsOK handles this case with default header values.

List of colonies
*/
type GetCharactersCharacterIDPlanetsOK struct {
	/*The caching mechanism used
	 */
	CacheControl string
	/*RFC7231 formatted datetime string
	 */
	Expires string
	/*RFC7231 formatted datetime string
	 */
	LastModified string

	Payload []*GetCharactersCharacterIDPlanetsOKBodyItems0
}

func (o *GetCharactersCharacterIDPlanetsOK) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/planets/][%d] getCharactersCharacterIdPlanetsOK  %+v", 200, o.Payload)
}

func (o *GetCharactersCharacterIDPlanetsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Cache-Control
	o.CacheControl = response.GetHeader("Cache-Control")

	// response header Expires
	o.Expires = response.GetHeader("Expires")

	// response header Last-Modified
	o.LastModified = response.GetHeader("Last-Modified")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDPlanetsForbidden creates a GetCharactersCharacterIDPlanetsForbidden with default headers values
func NewGetCharactersCharacterIDPlanetsForbidden() *GetCharactersCharacterIDPlanetsForbidden {
	return &GetCharactersCharacterIDPlanetsForbidden{}
}

/*GetCharactersCharacterIDPlanetsForbidden handles this case with default header values.

Forbidden
*/
type GetCharactersCharacterIDPlanetsForbidden struct {
	Payload GetCharactersCharacterIDPlanetsForbiddenBody
}

func (o *GetCharactersCharacterIDPlanetsForbidden) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/planets/][%d] getCharactersCharacterIdPlanetsForbidden  %+v", 403, o.Payload)
}

func (o *GetCharactersCharacterIDPlanetsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCharactersCharacterIDPlanetsInternalServerError creates a GetCharactersCharacterIDPlanetsInternalServerError with default headers values
func NewGetCharactersCharacterIDPlanetsInternalServerError() *GetCharactersCharacterIDPlanetsInternalServerError {
	return &GetCharactersCharacterIDPlanetsInternalServerError{}
}

/*GetCharactersCharacterIDPlanetsInternalServerError handles this case with default header values.

Internal server error
*/
type GetCharactersCharacterIDPlanetsInternalServerError struct {
	Payload GetCharactersCharacterIDPlanetsInternalServerErrorBody
}

func (o *GetCharactersCharacterIDPlanetsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /characters/{character_id}/planets/][%d] getCharactersCharacterIdPlanetsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetCharactersCharacterIDPlanetsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDPlanetsForbiddenBody get_characters_character_id_planets_forbidden
//
// Forbidden
swagger:model GetCharactersCharacterIDPlanetsForbiddenBody
*/
type GetCharactersCharacterIDPlanetsForbiddenBody struct {

	// get_characters_character_id_planets_403_forbidden
	//
	// Forbidden message
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this get characters character ID planets forbidden body
func (o *GetCharactersCharacterIDPlanetsForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDPlanetsForbiddenBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdPlanetsForbidden"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDPlanetsInternalServerErrorBody get_characters_character_id_planets_internal_server_error
//
// Internal server error
swagger:model GetCharactersCharacterIDPlanetsInternalServerErrorBody
*/
type GetCharactersCharacterIDPlanetsInternalServerErrorBody struct {

	// get_characters_character_id_planets_500_internal_server_error
	//
	// Internal server error message
	// Required: true
	Error *string `json:"error"`
}

// Validate validates this get characters character ID planets internal server error body
func (o *GetCharactersCharacterIDPlanetsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDPlanetsInternalServerErrorBody) validateError(formats strfmt.Registry) error {

	if err := validate.Required("getCharactersCharacterIdPlanetsInternalServerError"+"."+"error", "body", o.Error); err != nil {
		return err
	}

	return nil
}

/*GetCharactersCharacterIDPlanetsOKBodyItems0 get_characters_character_id_planets_200_ok
//
// 200 ok object
swagger:model GetCharactersCharacterIDPlanetsOKBodyItems0
*/
type GetCharactersCharacterIDPlanetsOKBodyItems0 struct {

	// get_characters_character_id_planets_last_update
	//
	// last_update string
	// Required: true
	LastUpdate *strfmt.DateTime `json:"last_update"`

	// get_characters_character_id_planets_num_pins
	//
	// num_pins integer
	// Required: true
	// Minimum: 1
	NumPins *int32 `json:"num_pins"`

	// get_characters_character_id_planets_owner_id
	//
	// owner_id integer
	// Required: true
	OwnerID *int32 `json:"owner_id"`

	// get_characters_character_id_planets_planet_id
	//
	// planet_id integer
	// Required: true
	PlanetID *int32 `json:"planet_id"`

	// get_characters_character_id_planets_planet_type
	//
	// planet_type string
	// Required: true
	PlanetType *string `json:"planet_type"`

	// get_characters_character_id_planets_solar_system_id
	//
	// solar_system_id integer
	// Required: true
	SolarSystemID *int32 `json:"solar_system_id"`

	// get_characters_character_id_planets_upgrade_level
	//
	// upgrade_level integer
	// Required: true
	// Maximum: 5
	// Minimum: 0
	UpgradeLevel *int32 `json:"upgrade_level"`
}

// Validate validates this get characters character ID planets o k body items0
func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLastUpdate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateNumPins(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateOwnerID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePlanetID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validatePlanetType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateSolarSystemID(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateUpgradeLevel(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) validateLastUpdate(formats strfmt.Registry) error {

	if err := validate.Required("last_update", "body", o.LastUpdate); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) validateNumPins(formats strfmt.Registry) error {

	if err := validate.Required("num_pins", "body", o.NumPins); err != nil {
		return err
	}

	if err := validate.MinimumInt("num_pins", "body", int64(*o.NumPins), 1, false); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) validateOwnerID(formats strfmt.Registry) error {

	if err := validate.Required("owner_id", "body", o.OwnerID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) validatePlanetID(formats strfmt.Registry) error {

	if err := validate.Required("planet_id", "body", o.PlanetID); err != nil {
		return err
	}

	return nil
}

var getCharactersCharacterIdPlanetsOKBodyItems0TypePlanetTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["temperate","barren","oceanic","ice","gas","lava","storm","plasma"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getCharactersCharacterIdPlanetsOKBodyItems0TypePlanetTypePropEnum = append(getCharactersCharacterIdPlanetsOKBodyItems0TypePlanetTypePropEnum, v)
	}
}

const (
	// GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeTemperate captures enum value "temperate"
	GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeTemperate string = "temperate"
	// GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeBarren captures enum value "barren"
	GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeBarren string = "barren"
	// GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeOceanic captures enum value "oceanic"
	GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeOceanic string = "oceanic"
	// GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeIce captures enum value "ice"
	GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeIce string = "ice"
	// GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeGas captures enum value "gas"
	GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeGas string = "gas"
	// GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeLava captures enum value "lava"
	GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeLava string = "lava"
	// GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeStorm captures enum value "storm"
	GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypeStorm string = "storm"
	// GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypePlasma captures enum value "plasma"
	GetCharactersCharacterIDPlanetsOKBodyItems0PlanetTypePlasma string = "plasma"
)

// prop value enum
func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) validatePlanetTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getCharactersCharacterIdPlanetsOKBodyItems0TypePlanetTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) validatePlanetType(formats strfmt.Registry) error {

	if err := validate.Required("planet_type", "body", o.PlanetType); err != nil {
		return err
	}

	// value enum
	if err := o.validatePlanetTypeEnum("planet_type", "body", *o.PlanetType); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) validateSolarSystemID(formats strfmt.Registry) error {

	if err := validate.Required("solar_system_id", "body", o.SolarSystemID); err != nil {
		return err
	}

	return nil
}

func (o *GetCharactersCharacterIDPlanetsOKBodyItems0) validateUpgradeLevel(formats strfmt.Registry) error {

	if err := validate.Required("upgrade_level", "body", o.UpgradeLevel); err != nil {
		return err
	}

	if err := validate.MinimumInt("upgrade_level", "body", int64(*o.UpgradeLevel), 0, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("upgrade_level", "body", int64(*o.UpgradeLevel), 5, false); err != nil {
		return err
	}

	return nil
}
